import Tipologia from "../models/Tipologia.js";

// üîπ Obtener todas las tipolog√≠as del usuario autenticado
export const listarTipologias = async (req, res) => {
  try {
    const tipologias = await Tipologia.find({ user: req.user.id });
    res.json(tipologias);
  } catch (error) {
    console.error("Error al obtener tipolog√≠as:", error);
    res.status(500).json({ message: "Error al obtener tipolog√≠as", error: error.message });
  }
};

// üîπ Obtener una tipolog√≠a por ID
export const obtenerTipologia = async (req, res) => {
  try {
    const tipologia = await Tipologia.findOne({ _id: req.params.id, user: req.user.id });
    if (!tipologia) return res.status(404).json({ message: "Tipolog√≠a no encontrada" });
    res.json(tipologia);
  } catch (error) {
    console.error("Error al obtener tipolog√≠a:", error);
    res.status(500).json({ message: "Error al obtener tipolog√≠a", error: error.message });
  }
};

// üîπ Crear una nueva tipolog√≠a
export const crearTipologia = async (req, res) => {
  try {
    const { nombre, descripcion } = req.body;

    if (!nombre) {
      return res.status(400).json({ message: "El nombre es obligatorio" });
    }

    const nuevaTipologia = new Tipologia({
      nombre,
      descripcion,
      user: req.user.id,
    });

    const tipologiaGuardada = await nuevaTipologia.save();
    res.status(201).json(tipologiaGuardada);
  } catch (error) {
    console.error("Error al crear tipolog√≠a:", error);
    res.status(400).json({ message: "Error al crear tipolog√≠a", error: error.message });
  }
};

// üîπ Actualizar una tipolog√≠a
export const actualizarTipologia = async (req, res) => {
  try {
    const tipologiaActualizada = await Tipologia.findOneAndUpdate(
      { _id: req.params.id, user: req.user.id },
      req.body,
      { new: true }
    );

    if (!tipologiaActualizada) return res.status(404).json({ message: "Tipolog√≠a no encontrada" });

    res.json(tipologiaActualizada);
  } catch (error) {
    console.error("Error al actualizar tipolog√≠a:", error);
    res.status(400).json({ message: "Error al actualizar tipolog√≠a", error: error.message });
  }
};

// üîπ Eliminar una tipolog√≠a
export const eliminarTipologia = async (req, res) => {
  try {
    const tipologiaEliminada = await Tipologia.findOneAndDelete({ _id: req.params.id, user: req.user.id });

    if (!tipologiaEliminada) return res.status(404).json({ message: "Tipolog√≠a no encontrada" });

    res.json({ message: "Tipolog√≠a eliminada correctamente" });
  } catch (error) {
    console.error("Error al eliminar tipolog√≠a:", error);
    res.status(500).json({ message: "Error al eliminar tipolog√≠a", error: error.message });
  }
};
